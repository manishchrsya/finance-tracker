# name: CI/CD for React App

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 18
#           cache: 'npm'

#       - name: Install Dependencies
#         run: npm install

#       - name: Build Project
#         run: npm run build

#       - name: Upload Build Artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: build
#           path: build

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     if: github.ref == 'refs/heads/master'

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Download Build Artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: build
#           path: build

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v4
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: build

name: CI/CD for React App

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  setup:
    name: Install Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  lint:
    name: Run Linting
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Cached Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run ESLint
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [setup, lint]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Cached Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run Tests
        run: CI=true npm test

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Cached Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build Project
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build
